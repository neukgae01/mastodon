#!/usr/bin/env bash

if [ "$1" == "start" ]; then
    sudo docker-compose start
fi

if [ "$1" == "stop" ]; then
    sudo docker-compose stop
fi

if [ "$1" == "setup" ]; then
  echo 'Setting system...' \
  && read -p "[1/6] Enter your domain (ex:mydomain.com) : " DOMAIN
  read -p "[2/6] Enter your email address for SSL certificate (ex:myemail@email.com) : " EMAIL
  read -p "[3/6] Enter your root database password (ex:rootdbpassword) : " ROOTDBPASSWORD
  read -p "[4/6] Enter your database username for gnuboard (ex:dbuser) : " DATABASEUSER
  read -p "[5/6] Enter your database password for gnuboard (ex:dbpassword) : " DATABASEPASSWORD
  read -p "[6/6] Enter your database name for gnuboard (ex:gnuboard) : " DATABASE \
  && rm -rf gnuboard; git clone https://github.com/neukgae01/mastodon mastodon \
  && cd mastodon \
  && sed -i "s/<rootdbpassword>/$ROOTDBPASSWORD/g" .env \
  && sed -i "s/<databaseuser>/$DATABASEUSER/g" .env \
  && sed -i "s/<databasepassword>/$DATABASEPASSWORD/g" .env \
  && sed -i "s/<database>/$DATABASE/g" .env \
  && sed -i "s/<domain>/$DOMAIN/g" docker-compose.yml \
  && sed -i "s/<domain>/$DOMAIN/g" docker-compose.production.yml \
  && sed -i "s/<email>/$EMAIL/g" docker-compose.yml \
  && sed -i "s/<domain>/$DOMAIN/g" nginx/conf.d/ssl-conf \
  && sed -i "s/<domain>/$DOMAIN/g" nginx/conf.d/mastodon.conf \
  && echo 'Setting timezone to Asia/Seoul...' \
  && sudo timedatectl set-timezone Asia/Seoul \
  && echo 'Installing Docker...' \
  && sudo apt install apt-transport-https ca-certificates curl gnupg-agent software-properties-common -y \
  && curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add - \
  && sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" -y \
  && sudo apt update -y \
  && sudo apt install docker-ce docker-ce-cli containerd.io -y \
  && if [ ! -f /usr/local/bin/docker-compose ] ; then
        echo 'Installing Docker Compose...' \
        && COMPOSE_VERSION=$(curl -s https://api.github.com/repos/docker/compose/releases/latest | grep 'tag_name' | cut -d\" -f4) \
        && sudo curl -L "https://github.com/docker/compose/releases/download/${COMPOSE_VERSION}/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose \
        && sudo chmod +x /usr/local/bin/docker-compose
        else echo 'Skip Installing Docker Compose'
     fi
  echo 'Installing SSL...' \
  && sudo docker-compose up \
  && echo 'Preparing docker-compose up' \
  && sudo docker-compose down -v \
  && sudo mkdir -p /usr/share/nginx/html;
  curl -sSLo nginx/conf.d/options-ssl-nginx https://raw.githubusercontent.com/certbot/certbot/master/certbot-nginx/certbot_nginx/_internal/tls_configs/options-ssl-nginx.conf \
  && sudo chmod a+x build/docker-entrypoint.sh \
  && sudo chmod a+x dc \
  && mv docker-compose.yml docker-compose.ssl.yml \
  && mv docker-compose.production.yml docker-compose.yml \
  && echo 'Configuring cron...' \
  && echo "0 23 * * * docker start certbot >> /var/log/docker_cron.log 2>&1
5 23 * * * docker exec nginx nginx -s reload >> /var/log/docker_cron.log 2>&1" >> mycron \
  && sudo crontab mycron; rm mycron \
  && echo 'Starting Docker ...' \
  && sudo docker-compose up -d  \
  && echo 'Done! ðŸŽ‰' \
  && echo 'by Rafael Correa Gomes and Woosung Choi' \
  && echo 'Below is a list of containers.'\
  && sudo docker-compose ps \
  && echo 'Access your gnuboard: https://'$DOMAIN;
fi
